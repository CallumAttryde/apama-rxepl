package com.industry.rx_epl.operators.internals;

using com.apama.exceptions.Exception;

using com.industry.rx_epl.IObserver;
using com.industry.rx_epl.IObserverBuilder;
using com.industry.rx_epl.IObservable;
using com.industry.rx_epl.ISubscription;
using com.industry.rx_epl.Subscription;
using com.industry.rx_epl.Subscriber;

event SkipSubscriber {
	IObserver subscriber;
	integer count;
	
	static action create(IObserver subscriber, integer count) returns IObserver {
		SkipSubscriber s := SkipSubscriber(subscriber, count);
		return IObserverBuilder.create(subscriber.createUpstream()).onNext(s.next).build();
	}
	
	action next(any value) {
		if count > 0 {
			count := count - 1;
		} else {
			subscriber.next(value);
		}
	}
}

event SkipOnConnection {
	action<IObserver> returns ISubscription parentOnConnection;
	integer count;
	
	static action create(action<IObserver> returns ISubscription parentOnConnection, integer count) returns action<IObserver> returns ISubscription {
		return SkipOnConnection(parentOnConnection, count).onConnection;
	}
	
	action onConnection(IObserver subscriber) returns ISubscription {
		return parentOnConnection(SkipSubscriber.create(subscriber, count));
	}
}
