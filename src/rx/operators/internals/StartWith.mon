package com.industry.rx_epl.operators.internals;

using com.apama.exceptions.Exception;

using com.industry.rx_epl.IObserver;
using com.industry.rx_epl.IObserverBuilder;
using com.industry.rx_epl.IObservable;
using com.industry.rx_epl.ISubscription;
using com.industry.rx_epl.Subscription;
using com.industry.rx_epl.Subscriber;

/** @private */
event StartWithOnConnection {
	action<IObserver> returns ISubscription parentOnConnection;
	sequence<any> values;
	
	static action create(action<IObserver> returns ISubscription parentOnConnection, sequence<any> values) returns action<IObserver> returns ISubscription {
		return StartWithOnConnection(parentOnConnection, values).onConnection;
	}
	
	action onConnection(IObserver subscriber) returns ISubscription {		
		ISubscription s := Subscription.create(subscriber).asISubscription();
		any value;
		for value in values {
			subscriber.next(value);
			if not subscriber.subscribed() {
				return s;
			}
		}
		return parentOnConnection(subscriber);
	}
}