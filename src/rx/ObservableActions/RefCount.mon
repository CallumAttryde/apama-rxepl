package com.industry.rx_epl;

using com.apama.exceptions.Exception;

event RefCountOnConnection {
	action<> returns IDisposable connect;
	action<Subscriber> returns ISubscription parentOnConnection;
	integer refCount;
	IDisposable connection;
	boolean connecting;
	boolean disposeSynchronously;
	
	static action create(action<> returns IDisposable connect, action<Subscriber> returns ISubscription parentOnConnection) returns action<Subscriber> returns ISubscription {
		return RefCountOnConnection(connect, parentOnConnection, 0, Disposable.createDisposed(), false, false).onConnection;
	}
	
	action onConnection(Subscriber subscriber) returns ISubscription {
		refCount := refCount + 1;
		subscriber._onUnsubscribe(decrementRefCount);
		ISubscription subscription := parentOnConnection(subscriber);
		if connection.disposed() {
			connection := connect();
		}
		return subscription;
	}
	
	action decrementRefCount() {
		refCount := refCount - 1;
		if refCount = 0 {
			if not connection.disposed() {
				connection.dispose();
			}
		}
	}
}