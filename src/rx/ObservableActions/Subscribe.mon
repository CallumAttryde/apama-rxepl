package com.industry.rx_epl;

using com.apama.exceptions.Exception;

event SubscribeSubscriber {
	action<> completeSubscriber;
	action<> onComplete;
	static action create(IObserver subscriber, action<> onComplete) returns IObserver {
		return IObserverBuilder.create(subscriber.createUpstream()).onComplete(SubscribeSubscriber(subscriber.complete, onComplete).complete).build();
	}
	
	action complete() {
		completeSubscriber();
		onComplete();
	}
}

event PullingSubscriber {
	IObserver subscriber;
	
	static action create(IObserver subscriber) returns IObserver {
		return PullingSubscriber(subscriber).createSubscriber();
	}
	
	action createSubscriber() returns IObserver {
		return IObserverBuilder.create(subscriber.createUpstream()).onNext(next).build();
	}
	
	action next(any value) {
		subscriber.next(value);
		if subscriber.isPulling() and subscriber.subscribed() {
			subscriber.pull();
		}
	}
}

event SubscribeOnConnection {
	action<IObserver> returns ISubscription parentOnConnection;
	static action create(action<IObserver> returns ISubscription parentOnConnection) returns action<IObserver> returns ISubscription {
		return SubscribeOnConnection(parentOnConnection).onConnection;
	}
	
	action onConnection(IObserver subscriber) returns ISubscription {
		if subscriber.isPulling() {
			IObserver pullingSubscriber := PullingSubscriber.create(SubscribeSubscriber.create(subscriber, subscriber.unsubscribe));
			ISubscription s := parentOnConnection(pullingSubscriber);
			subscriber.pull();
			return s;
		} else {
			ISubscription s := parentOnConnection(SubscribeSubscriber.create(subscriber, subscriber.unsubscribe));
			return s;
		}
	}
}