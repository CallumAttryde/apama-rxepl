package com.industry.rx_epl;

using com.apama.exceptions.Exception;

event SkipSubscriber {
	Subscriber subscriber;
	integer count;
	action<> pull;
	
	static action create(Subscriber subscriber, integer count) returns Subscriber {
		SkipSubscriber s := SkipSubscriber(subscriber, count, new action<>);
		if subscriber._isPulling {
			s.pull := LimitSyncInvoke.create(GlobalConstants.MAX_SYNC_VALUES, subscriber._pull).invoke;
		}
		return subscriber.copy().onNext(s.next);
	}
	
	action next(any value) {
		if count > 0 {
			count := count - 1;
			ifpresent pull {
				pull();
			}
		} else {
			subscriber.next(value);
		}
	}
}

event SkipOnConnection {
	action<Subscriber> returns ISubscription parentOnConnection;
	integer count;
	
	static action create(action<Subscriber> returns ISubscription parentOnConnection, integer count) returns action<Subscriber> returns ISubscription {
		return SkipOnConnection(parentOnConnection, count).onConnection;
	}
	
	action onConnection(Subscriber subscriber) returns ISubscription {
		return parentOnConnection(SkipSubscriber.create(subscriber, count));
	}
}
