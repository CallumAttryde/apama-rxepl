package com.industry.rx_epl;

using com.apama.exceptions.Exception;

event CreateObserver {
	IObserver subscriber;
	boolean isComplete;
	
	static action create(IObserver subscriber, action<action<> > addUnsubscribeHandler) returns IObserver {
		CreateObserver o := CreateObserver(subscriber, false);
		return IObserver(o.next, o.error, o.complete, addUnsubscribeHandler);
	}
	
	action next(any value) {
		if not isComplete {
			subscriber.next(value);
		}
	}
	
	action error(any value) {
		if not isComplete {
			subscriber.error(value);
		}
	}
	
	action complete() {
		if not isComplete {
			subscriber.complete();
		}
	}
}

event CreateOnConnection {
	action<IObserver> resolver;
	static action create(action<IObserver> resolver) returns action<IObserver> returns ISubscription {
		return CreateOnConnection(resolver).onConnection;
	}
	
	action onConnection(Subscriber subscriber) returns ISubscription {
		// Must create subscription before calling ay next, error, complete
		ISubscription subscription := Subscription.create(subscriber).asISubscription();
		resolver(CreateObserver.create(subscriber, subscription.add));
		return subscription;
	}
}