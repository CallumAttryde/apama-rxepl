package com.industry.rx_epl;

using com.apama.exceptions.Exception;

event ToStreamSubscriber {
	IObserver subscriber;
	stream<any> outputStream;
	string channelName;
	integer id;
	
	static action create(stream<any> outputStream, string channelName, integer id) returns IObserver {
		ToStreamSubscriber t := ToStreamSubscriber(new IObserver, outputStream, channelName, id);
		t.subscriber := Subscriber.create().onNext(t.next).onComplete(t.complete).asIObserver();
		return t.subscriber;
	}
	
	action next(any value) {
		route WrappedAnyFromChannel(channelName, id, value);
	}
	
	action complete() {
		// Have to do this async so that sent values arrive first
		on wait(0.0) {
			subscriber.unsubscribe();
		}
	}
}

event ToStream {	
	static action create(IObservable observable) returns DisposableStream {
		string channelName := "__ToStream__";
		integer id := integer.getUnique();
		monitor.subscribe(channelName);
		stream<any> outputStream := from a in all WrappedAnyFromChannel(channelName = channelName, uniqueId = id) select a.value;
		IObserver subscriber := ToStreamSubscriber.create(outputStream, channelName, id);
		subscriber.onUnsubscribe(outputStream.quit);
		ISubscription s := observable.connectObserver(subscriber);
		return DisposableStream(outputStream, subscriber.unsubscribe);
	}
}