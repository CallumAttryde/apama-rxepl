package com.industry.rx_epl;

using com.apama.exceptions.Exception;

event CatchErrorSubscriber {
	IObserver downstreamSubscriber;
	IObservable catchObservable;
	IObserver upstreamSubscriber;
	
	static action create(IObserver subscriber, IObservable catchObservable) returns IObserver {
		CatchErrorSubscriber c := CatchErrorSubscriber(subscriber, catchObservable, new IObserver);
		subscriber.onUnsubscribe(c.unsubscribe);
		c.upstreamSubscriber := Subscriber.create().onNext(subscriber.next).onError(c.onError).onComplete(subscriber.complete).asIObserver();
		subscriber.subscribe();
		return c.upstreamSubscriber;
	}
	
	action onError(any e) {
		upstreamSubscriber.unsubscribe();
		upstreamSubscriber := downstreamSubscriber.createUpstream();
		ISubscription s := catchObservable.connectObserver(upstreamSubscriber);
	}
	
	action unsubscribe() {
		upstreamSubscriber.unsubscribe();
	}
}

event CatchErrorOnConnection {
	action<IObserver> returns ISubscription parentOnConnection;
	IObservable catchObservable;
	
	static action create(action<IObserver> returns ISubscription parentOnConnection, IObservable catchObservable) returns action<IObserver> returns ISubscription {
		return CatchErrorOnConnection(parentOnConnection, catchObservable).onConnection;
	}
	
	action onConnection(IObserver subscriber) returns ISubscription {
		return parentOnConnection(CatchErrorSubscriber.create(subscriber, catchObservable));
	}
}