package com.industry.rx_epl;

using com.apama.exceptions.Exception;

event SkipLastSubscriber {
	Subscriber subscriber;
	integer count;
	sequence<any> values;
	action<> pull;
	
	static action create(Subscriber subscriber, integer count) returns Subscriber {
		SkipLastSubscriber s := SkipLastSubscriber(subscriber, count, new sequence<any>, new action<>);
		if subscriber._isPulling {
			s.pull := LimitSyncInvoke.create(GlobalConstants.MAX_SYNC_VALUES, subscriber._pull).invoke;
		}
		return subscriber.copy().onNext(s.next);
	}
	
	action next(any value) {
		values.append(value);
		if values.size() <= count {
			ifpresent pull {
				pull();
			}
		} else {
			any value := values[0];
			values.remove(0);
			subscriber.next(value);
		}
	}
}

event SkipLastOnConnection {
	action<Subscriber> returns ISubscription parentOnConnection;
	integer count;
	
	static action create(action<Subscriber> returns ISubscription parentOnConnection, integer count) returns action<Subscriber> returns ISubscription {
		return SkipLastOnConnection(parentOnConnection, count).onConnection;
	}
	
	action onConnection(Subscriber subscriber) returns ISubscription {
		return parentOnConnection(SkipLastSubscriber.create(subscriber, count));
	}
}